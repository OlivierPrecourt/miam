@using Externalization
@model IEnumerable<Miam.Web.ViewModels.Restaurant.RestaurantIndexViewModel>

<h2 id="index-restaurant-page">@UiText.Restaurant.UPDATE_RESTAURANTS</h2>

<div class="text-right" id="restaurants-count">@Model.Count() @UiText.Restaurant.RESTAURANTS</div>

<ul class="list-group">
    @foreach (var item in Model)
    {
        <li class="list-group-item">
            <h4>
                @item.Name
                
                @Html.ActionLink(" ", MVC.Restaurant.Edit().AddRouteValues(new { restaurantId = item.Id }), new { id = "edit_button" + item.Id, @class = "fa fa-pencil-square-o" })
                @Html.ActionLink(" ", MVC.Restaurant.Delete().AddRouteValues(new { restaurantId = item.Id }), new { id = "delete_button" + item.Id, @class = "fa fa-trash-o" })
            </h4>

            <div>@item.City</div>
            <div>@item.Country</div>
            <div>Nombre de critiques: @item.CountOfReviews</div>
            <div>Moyenne des critiques: @item.RatingReviewsAverage /5</div>
        </li>
    }
</ul>



@section SectionCss{
    <link href="@Url.Content("~/Content/Toastr/toastr.css")" rel="stylesheet" type="text/css" />
}

@section SectionJavascript{
    <script src="~/Scripts/jquery-1.9.0.js"></script>
    <script src="~/Scripts/toastr.js"></script>
    <script>
                $(document).ready(function () {
                    // show when page load
                    toastr.info('Page Loaded!');
                });
    </script>
}


